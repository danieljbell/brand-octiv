!function(){for(var e=document.querySelectorAll("button.expander"),t=0;t<e.length;t++)e[t].addEventListener("click",function(){this.previousElementSibling.classList.toggle("is-expanded"),"Expand Code"===this.innerText?this.innerText="Collapse Code":this.innerText="Expand Code"})}(),function(){for(var e=document.querySelectorAll(".sticky-sidebar"),t=0;t<e.length;t++){var o=e[t],s=o.offsetTop,r=o.parentNode.children[1];window.scrollY>s-54&&o.classList.add("stuck"),window.addEventListener("scroll",function(){var e=window.scrollY;if(e>s-54&&(o.classList.add("stuck"),o.style.transform="translateY(0)"),e<s-54&&o.classList.remove("stuck"),e>r.offsetHeight+r.offsetTop-o.offsetHeight-54){var t=e-r.offsetHeight-o.offsetHeight-o.offsetTop-198;o.style.transform="translateY(-"+t+"px)"}e>r.offsetHeight+r.offsetTop+o.offsetHeight-108&&(o.classList.remove("stuck"),o.style.transform="translateY(0px)");for(var n=r.querySelectorAll("section"),l=0;l<n.length;l++){var i=l;o.querySelectorAll("a");e>n[l].offsetTop-54&&n[l+1]&&(e<n[l+1].offsetTop-54?o.children[2].children[i].classList.add("active"):o.children[2].children[i].classList.remove("active"))}});for(var n=o.querySelectorAll("a"),t=0;t<n.length;t++)n[t].addEventListener("click",function(e){e.preventDefault();var t=e.target.hash,o=document.querySelector(t);window.scrollTo(0,o.offsetTop-54)})}}(),function(){for(var e=document.querySelectorAll(".card"),t=0;t<e.length;t++)e[t].addEventListener("mouseover",function(e){console.log(e)})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvZGUtZXhhbXBsZS5qcyIsInN0aWNreS1zaWRlYmFyLmpzIiwiY2FyZHMuanMiXSwibmFtZXMiOlsiYWxsQnV0dG9ucyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImkiLCJsZW5ndGgiLCJhZGRFdmVudExpc3RlbmVyIiwidGhpcyIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJpbm5lclRleHQiLCJnZXRTdGlja3lFbGVtIiwiZWxlbSIsImVsZW1PZmZzZXQiLCJvZmZzZXRUb3AiLCJuZXh0RWxlbSIsInBhcmVudE5vZGUiLCJjaGlsZHJlbiIsIndpbmRvdyIsInNjcm9sbFkiLCJhZGQiLCJzdHlsZSIsInRyYW5zZm9ybSIsInJlbW92ZSIsIm9mZnNldEhlaWdodCIsInRyYW5zZm9ybUFtb3VudCIsIm5leHRFbGVtQ29udGFpbmVycyIsImNvdW50Iiwic3RpY2t5TGlua3MiLCJlIiwicHJldmVudERlZmF1bHQiLCJ0YXJnZXQiLCJoYXNoIiwidGFyZ2V0TG9jYXRpb24iLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsVG8iLCJhbGxDYXJkcyIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJDQUFBLFdBRUEsSUFBQSxHQURBQSxHQUFBQyxTQUFBQyxpQkFBQSxtQkFDQUMsRUFBQSxFQUFBQSxFQUFBSCxFQUFBSSxPQUFBRCxJQUNBSCxFQUFBRyxHQUFBRSxpQkFBQSxRQUFBLFdBQ0FDLEtBQUFDLHVCQUFBQyxVQUFBQyxPQUFBLGVBQ0EsZ0JBQUFILEtBQUFJLFVBQ0FKLEtBQUFJLFVBQUEsZ0JBRUFKLEtBQUFJLFVBQUEsbUJDUkEsV0FFQSxJQUFBLEdBREFDLEdBQUFWLFNBQUFDLGlCQUFBLG1CQUNBQyxFQUFBLEVBQUFBLEVBQUFRLEVBQUFQLE9BQUFELElBQUEsQ0FDQSxHQUFBUyxHQUFBRCxFQUFBUixHQUNBVSxFQUFBRCxFQUFBRSxVQUNBQyxFQUFBSCxFQUFBSSxXQUFBQyxTQUFBLEVBRUFDLFFBQUFDLFFBQUFOLEVBQUEsSUFDQUQsRUFBQUosVUFBQVksSUFBQSxTQUdBRixPQUFBYixpQkFBQSxTQUFBLFdBQ0EsR0FBQWMsR0FBQUQsT0FBQUMsT0FTQSxJQVBBQSxFQUFBTixFQUFBLEtBQ0FELEVBQUFKLFVBQUFZLElBQUEsU0FDQVIsRUFBQVMsTUFBQUMsVUFBQSxpQkFFQUgsRUFBQU4sRUFBQSxJQUNBRCxFQUFBSixVQUFBZSxPQUFBLFNBRUFKLEVBQUFKLEVBQUFTLGFBQUFULEVBQUFELFVBQUFGLEVBQUFZLGFBQUEsR0FBQSxDQUNBLEdBQUFDLEdBQUFOLEVBQUFKLEVBQUFTLGFBQUFaLEVBQUFZLGFBQUFaLEVBQUFFLFVBQUEsR0FDQUYsR0FBQVMsTUFBQUMsVUFBQSxlQUFBRyxFQUFBLE1BRUFOLEVBQUFKLEVBQUFTLGFBQUFULEVBQUFELFVBQUFGLEVBQUFZLGFBQUEsTUFDQVosRUFBQUosVUFBQWUsT0FBQSxTQUNBWCxFQUFBUyxNQUFBQyxVQUFBLGtCQUlBLEtBQUEsR0FEQUksR0FBQVgsRUFBQWIsaUJBQUEsV0FDQUMsRUFBQSxFQUFBQSxFQUFBdUIsRUFBQXRCLE9BQUFELElBQUEsQ0FDQSxHQUFBd0IsR0FBQXhCLENBQ0FTLEdBQUFWLGlCQUFBLElBQ0FpQixHQUFBTyxFQUFBdkIsR0FBQVcsVUFBQSxJQUNBWSxFQUFBdkIsRUFBQSxLQUNBZ0IsRUFBQU8sRUFBQXZCLEVBQUEsR0FBQVcsVUFBQSxHQUNBRixFQUFBSyxTQUFBLEdBQUFBLFNBQUFVLEdBQUFuQixVQUFBWSxJQUFBLFVBRUFSLEVBQUFLLFNBQUEsR0FBQUEsU0FBQVUsR0FBQW5CLFVBQUFlLE9BQUEsYUFTQSxLQUFBLEdBREFLLEdBQUFoQixFQUFBVixpQkFBQSxLQUNBQyxFQUFBLEVBQUFBLEVBQUF5QixFQUFBeEIsT0FBQUQsSUFDQXlCLEVBQUF6QixHQUFBRSxpQkFBQSxRQUFBLFNBQUF3QixHQUNBQSxFQUFBQyxnQkFDQSxJQUFBQyxHQUFBRixFQUFBRSxPQUFBQyxLQUNBQyxFQUFBaEMsU0FBQWlDLGNBQUFILEVBQ0FiLFFBQUFpQixTQUFBLEVBQUFGLEVBQUFuQixVQUFBLFVDckRBLFdBRUEsSUFBQSxHQURBc0IsR0FBQW5DLFNBQUFDLGlCQUFBLFNBQ0FDLEVBQUEsRUFBQUEsRUFBQWlDLEVBQUFoQyxPQUFBRCxJQUNBaUMsRUFBQWpDLEdBQUFFLGlCQUFBLFlBQUEsU0FBQXdCLEdBQ0FRLFFBQUFDLElBQUFUIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcbiAgdmFyIGFsbEJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdidXR0b24uZXhwYW5kZXInKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxCdXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gICAgYWxsQnV0dG9uc1tpXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC50b2dnbGUoJ2lzLWV4cGFuZGVkJyk7XG4gICAgICBpZiAodGhpcy5pbm5lclRleHQgPT09ICdFeHBhbmQgQ29kZScpIHtcbiAgICAgICAgdGhpcy5pbm5lclRleHQgPSAnQ29sbGFwc2UgQ29kZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmlubmVyVGV4dCA9ICdFeHBhbmQgQ29kZSc7XG4gICAgICB9XG4gICAgfSlcbiAgfTtcbn0pKCk7IiwiKGZ1bmN0aW9uKCkge1xuICB2YXIgZ2V0U3RpY2t5RWxlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zdGlja3ktc2lkZWJhcicpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGdldFN0aWNreUVsZW0ubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZWxlbSA9IGdldFN0aWNreUVsZW1baV07XG4gICAgdmFyIGVsZW1PZmZzZXQgPSBlbGVtLm9mZnNldFRvcDtcbiAgICB2YXIgbmV4dEVsZW0gPSBlbGVtLnBhcmVudE5vZGUuY2hpbGRyZW5bMV07XG5cbiAgICBpZiAod2luZG93LnNjcm9sbFkgPiAoZWxlbU9mZnNldCAtIDU0KSkge1xuICAgICAgZWxlbS5jbGFzc0xpc3QuYWRkKCdzdHVjaycpO1xuICAgIH1cblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzY3JvbGxZID0gd2luZG93LnNjcm9sbFk7XG5cbiAgICAgIGlmIChzY3JvbGxZID4gKGVsZW1PZmZzZXQgLSA1NCkpIHtcbiAgICAgICAgZWxlbS5jbGFzc0xpc3QuYWRkKCdzdHVjaycpO1xuICAgICAgICBlbGVtLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVZKDApJztcbiAgICAgIH1cbiAgICAgIGlmIChzY3JvbGxZIDwgKGVsZW1PZmZzZXQgLSA1NCkpIHtcbiAgICAgICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKCdzdHVjaycpO1xuICAgICAgfVxuICAgICAgaWYgKHNjcm9sbFkgPiAobmV4dEVsZW0ub2Zmc2V0SGVpZ2h0ICsgbmV4dEVsZW0ub2Zmc2V0VG9wIC0gZWxlbS5vZmZzZXRIZWlnaHQgLSA1NCkpIHtcbiAgICAgICAgdmFyIHRyYW5zZm9ybUFtb3VudCA9IChzY3JvbGxZIC0gbmV4dEVsZW0ub2Zmc2V0SGVpZ2h0IC0gZWxlbS5vZmZzZXRIZWlnaHQgLSBlbGVtLm9mZnNldFRvcCAtICgxOCAqIDExKSlcbiAgICAgICAgZWxlbS5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWSgtJyArIHRyYW5zZm9ybUFtb3VudCArICdweCknO1xuICAgICAgfVxuICAgICAgaWYgKHNjcm9sbFkgPiAobmV4dEVsZW0ub2Zmc2V0SGVpZ2h0ICsgbmV4dEVsZW0ub2Zmc2V0VG9wICsgZWxlbS5vZmZzZXRIZWlnaHQgLSAxMDgpKSB7XG4gICAgICAgIGVsZW0uY2xhc3NMaXN0LnJlbW92ZSgnc3R1Y2snKTtcbiAgICAgICAgZWxlbS5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWSgwcHgpJztcbiAgICAgIH1cblxuICAgICAgdmFyIG5leHRFbGVtQ29udGFpbmVycyA9IG5leHRFbGVtLnF1ZXJ5U2VsZWN0b3JBbGwoJ3NlY3Rpb24nKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV4dEVsZW1Db250YWluZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBjb3VudCA9IGk7XG4gICAgICAgIHZhciBsaW5rcyA9IGVsZW0ucXVlcnlTZWxlY3RvckFsbCgnYScpO1xuICAgICAgICBpZiAoc2Nyb2xsWSA+IG5leHRFbGVtQ29udGFpbmVyc1tpXS5vZmZzZXRUb3AgLSA1NCkge1xuICAgICAgICAgIGlmIChuZXh0RWxlbUNvbnRhaW5lcnNbaSsxXSkge1xuICAgICAgICAgICAgaWYgKHNjcm9sbFkgPCAobmV4dEVsZW1Db250YWluZXJzW2krMV0ub2Zmc2V0VG9wIC0gNTQpKSB7XG4gICAgICAgICAgICAgIGVsZW0uY2hpbGRyZW5bMl0uY2hpbGRyZW5bY291bnRdLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgZWxlbS5jaGlsZHJlblsyXS5jaGlsZHJlbltjb3VudF0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICB9KTtcblxuICAgIHZhciBzdGlja3lMaW5rcyA9IGVsZW0ucXVlcnlTZWxlY3RvckFsbCgnYScpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RpY2t5TGlua3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIHN0aWNreUxpbmtzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldC5oYXNoO1xuICAgICAgICB2YXIgdGFyZ2V0TG9jYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCAodGFyZ2V0TG9jYXRpb24ub2Zmc2V0VG9wIC0gNTQpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICB2YXIgYWxsQ2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2FyZCcpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbENhcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgYWxsQ2FyZHNbaV0uYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgZnVuY3Rpb24oZSkge1xuICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgfSk7XG4gIH1cbn0pKCk7XG4iXX0=
